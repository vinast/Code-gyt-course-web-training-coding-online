{
  "version": 3,
  "sources": ["../../@iconify/iconify/dist/iconify.mjs", "dep:@iconify_iconify"],
  "sourcesContent": ["/**\n* (c) Iconify\n*\n* For the full copyright and license information, please view the license.txt or license.gpl.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under Apache 2.0 or GPL 2.0 at your option.\n* If derivative product is not compatible with one of licenses, you can pick one of licenses.\n*\n* @license Apache 2.0\n* @license GPL 2.0\n* @version 2.1.2\n*/\n// src/icon/index.ts\nvar matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nvar iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\n// src/icon/merge.ts\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\n// src/icon-set/get-icon.ts\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    var _a, _b, _c, _d;\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    if (((_a = data.aliases) == null ? void 0 : _a[name2]) !== void 0) {\n      const item = (_b = data.aliases) == null ? void 0 : _b[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    if (iteration === 0 && ((_c = data.chars) == null ? void 0 : _c[name2]) !== void 0) {\n      return getIcon((_d = data.chars) == null ? void 0 : _d[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\n// src/icon-set/validate.ts\nvar matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n    }\n  }\n  return null;\n}\nfunction validateIconSet(obj, options) {\n  const fix = !!(options == null ? void 0 : options.fix);\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n  const data = obj;\n  if (typeof (options == null ? void 0 : options.prefix) === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n  if (typeof (options == null ? void 0 : options.provider) === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n    const item = icons[name];\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n  if (!Object.keys(data.icons).length) {\n    throw new Error(\"Icon set is empty\");\n  }\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function(name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n      const item = aliases[name];\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n      const parent = item.parent;\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n      validatedAliases.add(name);\n      return true;\n    };\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach((name) => {\n      validateAlias(name, 0);\n    });\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n  Object.keys(iconDefaults).forEach((prop) => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach((char) => {\n      var _a;\n      if (!char.match(matchChar) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n      const target = chars[char];\n      if (data.icons[target] === void 0 && ((_a = data.aliases) == null ? void 0 : _a[target]) === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n  return data;\n}\n\n// src/icon-set/parse.ts\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  const validate = options.validate;\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : { fix: true });\n    } catch (err) {\n      return names;\n    }\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\n// src/icon/name.ts\nvar stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nvar validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\n// src/storage/storage.ts\nvar storageVersion = 1;\nvar storage$1 = Object.create(null);\ntry {\n  const w = window || self;\n  if ((w == null ? void 0 : w._iconifyStorage.version) === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {\n}\nfunction shareStorage() {\n  try {\n    const w = window || self;\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {\n  }\n}\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: Object.create(null),\n    missing: Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\n// src/storage/functions.ts\nvar simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\n// src/customisations/index.ts\nvar defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\n// src/svg/size.ts\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\n// src/svg/build.ts\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left) + \" \" + (0 - box.top) + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left) + \" \" + (box.height + box.top) + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left) + \" \" + (box.height / 2 + box.top) + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width + \"\";\n  height = typeof height === \"string\" ? height : height + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left + \" \" + box.top + \" \" + box.width + \" \" + box.height\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\n// src/builder/functions.ts\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\n// src/svg/id.ts\nvar regex = /\\sid=\"(\\S+)\"/g;\nvar randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nvar counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + counter++;\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\n// src/browser-storage/index.ts\nvar cacheVersion = \"iconify2\";\nvar cachePrefix = \"iconify\";\nvar countKey = cachePrefix + \"-count\";\nvar versionKey = cachePrefix + \"-version\";\nvar hour = 36e5;\nvar cacheExpiration = 168;\nvar config = {\n  local: true,\n  session: true\n};\nvar loaded = false;\nvar count = {\n  local: 0,\n  session: 0\n};\nvar emptyList = {\n  local: [],\n  session: []\n};\nvar _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal$1(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value + \"\");\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i);\n    }\n  } catch (err) {\n  }\n}\nvar loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal$1(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index;\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nvar storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal$1(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index, JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\n// src/cache.ts\nvar cache = {};\n\n// src/browser-storage/functions.ts\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\n// src/api/modules.ts\nvar storage = Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\n// src/api/config.ts\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nvar configStorage = Object.create(null);\nvar fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nvar fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\n// src/api/params.ts\nvar mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\n// src/api/modules/jsonp.ts\nvar rootVar = null;\nvar rootVarName = null;\nvar maxLengthCache$1 = Object.create(null);\nvar pathCache$1 = Object.create(null);\nfunction hash(str) {\n  let total = 0, i;\n  for (i = str.length - 1; i >= 0; i--) {\n    total += str.charCodeAt(i);\n  }\n  return total % 999;\n}\nfunction getGlobal() {\n  if (rootVar === null) {\n    const globalRoot = self;\n    let prefix = \"Iconify\";\n    let extraPrefix = \".cb\";\n    if (globalRoot[prefix] === void 0) {\n      prefix = \"IconifyJSONP\";\n      extraPrefix = \"\";\n      if (globalRoot[prefix] === void 0) {\n        globalRoot[prefix] = Object.create(null);\n      }\n      rootVar = globalRoot[prefix];\n    } else {\n      const iconifyRoot = globalRoot[prefix];\n      if (iconifyRoot.cb === void 0) {\n        iconifyRoot.cb = Object.create(null);\n      }\n      rootVar = iconifyRoot.cb;\n    }\n    rootVarName = prefix + extraPrefix + \".{cb}\";\n  }\n  return rootVar;\n}\nfunction calculateMaxLength$1(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    getGlobal();\n    const url = mergeParams(prefix + \".js\", {\n      icons: \"\",\n      callback: rootVarName\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache$1[cacheKey] = config.path;\n  maxLengthCache$1[cacheKey] = result;\n  return result;\n}\nvar prepare$1 = (provider, prefix, icons) => {\n  const results = [];\n  const cacheKey = provider + \":\" + prefix;\n  let maxLength = maxLengthCache$1[cacheKey];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength$1(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nvar send$1 = (host, params, status) => {\n  if (params.type !== \"icons\") {\n    status.done(void 0, 400);\n    return;\n  }\n  const provider = params.provider;\n  const prefix = params.prefix;\n  const icons = params.icons;\n  const iconsList = icons.join(\",\");\n  const cacheKey = provider + \":\" + prefix;\n  const cbPrefix = prefix.split(\"-\").shift().slice(0, 3);\n  const global = getGlobal();\n  let cbCounter = hash(provider + \":\" + host + \":\" + prefix + \":\" + iconsList);\n  while (global[cbPrefix + cbCounter] !== void 0) {\n    cbCounter++;\n  }\n  const callbackName = cbPrefix + cbCounter;\n  const url = mergeParams(prefix + \".js\", {\n    icons: iconsList,\n    callback: rootVarName.replace(\"{cb}\", callbackName)\n  });\n  const path = pathCache$1[cacheKey] + url;\n  global[callbackName] = (data) => {\n    delete global[callbackName];\n    status.done(data);\n  };\n  const uri = host + path;\n  const script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = true;\n  script.src = uri;\n  document.head.appendChild(script);\n};\nvar jsonpAPIModule = { prepare: prepare$1, send: send$1 };\n\n// src/api/modules/fetch.ts\nvar maxLengthCache = Object.create(null);\nvar pathCache = Object.create(null);\nvar detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  try {\n    const chunk = String.fromCharCode(114) + String.fromCharCode(101);\n    const req = global[chunk + \"qui\" + chunk];\n    callback = req(\"cross-fetch\");\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nvar fetchModule = detectFetch();\nfunction setFetch$1(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nvar prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nvar send = (host, params, status) => {\n  if (!fetchModule) {\n    status.done(void 0, 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      status.done(void 0, 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    if (response.status !== 200) {\n      setTimeout(() => {\n        status.done(void 0, response.status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        status.done(void 0, defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      status.done(data);\n    });\n  }).catch(() => {\n    status.done(void 0, defaultError);\n  });\n};\nvar fetchAPIModule = {\n  prepare,\n  send\n};\n\n// src/icon/sort.ts\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\n// src/api/callbacks.ts\nvar callbacks = Object.create(null);\nvar pendingUpdates = Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nvar idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\n// src/icon/list.ts\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done, success) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError = void 0;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.abort) {\n        item.abort();\n      }\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue = queue.filter((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n      if (item.abort) {\n        item.abort();\n      }\n      return false;\n    });\n  }\n  function moduleResponse(item, data, error) {\n    const isError = data === void 0;\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (isError) {\n      if (error !== void 0) {\n        lastError = error;\n      }\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (success && !config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        success(index);\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        const timeout2 = typeof config.timeout === \"function\" ? config.timeout(startTime) : config.timeout;\n        if (timeout2) {\n          timer = setTimeout(() => {\n            resetTimer();\n            if (status === \"pending\") {\n              clearQueue();\n              failQuery();\n            }\n          }, timeout2);\n          return;\n        }\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      getQueryStatus,\n      status: \"pending\",\n      resource,\n      done: (data, error) => {\n        moduleResponse(item, data, error);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    const timeout = typeof config.rotate === \"function\" ? config.rotate(queriesSent, startTime) : config.rotate;\n    timer = setTimeout(execNext, timeout);\n    query(resource, payload, item);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    }, (newIndex) => {\n      config.index = newIndex;\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\n// src/api/query.ts\nfunction emptyCallback$1() {\n}\nvar redundancyCache = Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\n// src/api/icons.ts\nfunction emptyCallback() {\n}\nvar pendingIcons = Object.create(null);\nvar iconsToLoad = Object.create(null);\nvar loaderFlags = Object.create(null);\nvar queueFlags = Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nvar errorsCache = Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nvar isPending = (icon) => {\n  const provider = icon.provider;\n  const prefix = icon.prefix;\n  return pendingIcons[provider] && pendingIcons[provider][prefix] && pendingIcons[provider][prefix][icon.name] !== void 0;\n};\nvar loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nvar iconsQueue = Object.create(null);\nvar loadIcon = (icon) => {\n  if (typeof icon === \"string\" && iconsQueue[icon]) {\n    return iconsQueue[icon];\n  }\n  const result = new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n  if (typeof icon === \"string\") {\n    iconsQueue[icon] = result;\n  }\n  return result;\n};\n\n/**\n * Names of properties to add to nodes\n */\nconst elementFinderProperty = ('iconifyFinder' + Date.now());\nconst elementDataProperty = ('iconifyData' + Date.now());\n\n/**\n * Replace element with SVG\n */\nfunction renderIconInPlaceholder(placeholder, customisations, iconData, returnString) {\n    // Create placeholder. Why placeholder? IE11 doesn't support innerHTML method on SVG.\n    let span;\n    try {\n        span = document.createElement('span');\n    }\n    catch (err) {\n        return returnString ? '' : null;\n    }\n    const data = iconToSVG(iconData, mergeCustomisations(defaults, customisations));\n    // Placeholder properties\n    const placeholderElement = placeholder.element;\n    const finder = placeholder.finder;\n    const name = placeholder.name;\n    // Get class name\n    const placeholderClassName = placeholderElement\n        ? placeholderElement.getAttribute('class')\n        : '';\n    const filteredClassList = finder\n        ? finder.classFilter(placeholderClassName ? placeholderClassName.split(/\\s+/) : [])\n        : [];\n    const className = 'iconify iconify--' +\n        name.prefix +\n        (name.provider === '' ? '' : ' iconify--' + name.provider) +\n        (filteredClassList.length ? ' ' + filteredClassList.join(' ') : '');\n    // Generate SVG as string\n    const html = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"' +\n        className +\n        '\">' +\n        replaceIDs(data.body) +\n        '</svg>';\n    // Set HTML for placeholder\n    span.innerHTML = html;\n    // Get SVG element\n    const svg = span.childNodes[0];\n    const svgStyle = svg.style;\n    // Add attributes\n    const svgAttributes = data.attributes;\n    Object.keys(svgAttributes).forEach((attr) => {\n        svg.setAttribute(attr, svgAttributes[attr]);\n    });\n    // Add custom styles\n    if (data.inline) {\n        svgStyle.verticalAlign = '-0.125em';\n    }\n    // Copy stuff from placeholder\n    if (placeholderElement) {\n        // Copy attributes\n        const placeholderAttributes = placeholderElement.attributes;\n        for (let i = 0; i < placeholderAttributes.length; i++) {\n            const item = placeholderAttributes.item(i);\n            if (item) {\n                const name = item.name;\n                if (name !== 'class' &&\n                    name !== 'style' &&\n                    svgAttributes[name] === void 0) {\n                    try {\n                        svg.setAttribute(name, item.value);\n                    }\n                    catch (err) {\n                        //\n                    }\n                }\n            }\n        }\n        // Copy styles\n        const placeholderStyle = placeholderElement.style;\n        for (let i = 0; i < placeholderStyle.length; i++) {\n            const attr = placeholderStyle[i];\n            svgStyle[attr] = placeholderStyle[attr];\n        }\n    }\n    // Store finder specific data\n    if (finder) {\n        const elementData = {\n            name: name,\n            status: 'loaded',\n            customisations: customisations,\n        };\n        svg[elementDataProperty] = elementData;\n        svg[elementFinderProperty] = finder;\n    }\n    // Get result\n    const result = returnString ? span.innerHTML : svg;\n    // Replace placeholder\n    if (placeholderElement && placeholderElement.parentNode) {\n        placeholderElement.parentNode.replaceChild(svg, placeholderElement);\n    }\n    else {\n        // Placeholder has no parent? Remove SVG parent as well\n        span.removeChild(svg);\n    }\n    // Return new node\n    return result;\n}\n\n/**\n * List of root nodes\n */\nlet nodes = [];\n/**\n * Find node\n */\nfunction findRootNode(node) {\n    for (let i = 0; i < nodes.length; i++) {\n        const item = nodes[i];\n        const root = typeof item.node === 'function' ? item.node() : item.node;\n        if (root === node) {\n            return item;\n        }\n    }\n}\n/**\n * Add extra root node\n */\nfunction addRootNode(root, autoRemove = false) {\n    let node = findRootNode(root);\n    if (node) {\n        // Node already exist: switch type if needed\n        if (node.temporary) {\n            node.temporary = autoRemove;\n        }\n        return node;\n    }\n    // Create item, add it to list, start observer\n    node = {\n        node: root,\n        temporary: autoRemove,\n    };\n    nodes.push(node);\n    return node;\n}\n/**\n * Add document.body node\n */\nfunction addBodyNode() {\n    if (document.documentElement) {\n        return addRootNode(document.documentElement);\n    }\n    nodes.push({\n        node: () => {\n            return document.documentElement;\n        },\n    });\n}\n/**\n * Remove root node\n */\nfunction removeRootNode(root) {\n    nodes = nodes.filter((node) => {\n        const element = typeof node.node === 'function' ? node.node() : node.node;\n        return root !== element;\n    });\n}\n/**\n * Get list of root nodes\n */\nfunction listRootNodes() {\n    return nodes;\n}\n\n/**\n * Execute function when DOM is ready\n */\nfunction onReady(callback) {\n    const doc = document;\n    if (doc.readyState === 'complete' ||\n        (doc.readyState !== 'loading' &&\n            !doc.documentElement.doScroll)) {\n        callback();\n    }\n    else {\n        doc.addEventListener('DOMContentLoaded', callback);\n        window.addEventListener('load', callback);\n    }\n}\n\n/**\n * Callback\n */\nlet callback = null;\n/**\n * Parameters for mutation observer\n */\nconst observerParams = {\n    childList: true,\n    subtree: true,\n    attributes: true,\n};\n/**\n * Queue DOM scan\n */\nfunction queueScan(node) {\n    if (!node.observer) {\n        return;\n    }\n    const observer = node.observer;\n    if (!observer.pendingScan) {\n        observer.pendingScan = setTimeout(() => {\n            delete observer.pendingScan;\n            if (callback) {\n                callback(node);\n            }\n        });\n    }\n}\n/**\n * Check mutations for added nodes\n */\nfunction checkMutations(node, mutations) {\n    if (!node.observer) {\n        return;\n    }\n    const observer = node.observer;\n    if (!observer.pendingScan) {\n        for (let i = 0; i < mutations.length; i++) {\n            const item = mutations[i];\n            if (\n            // Check for added nodes\n            (item.addedNodes && item.addedNodes.length > 0) ||\n                // Check for icon or placeholder with modified attributes\n                (item.type === 'attributes' &&\n                    item.target[elementFinderProperty] !==\n                        void 0)) {\n                if (!observer.paused) {\n                    queueScan(node);\n                }\n                return;\n            }\n        }\n    }\n}\n/**\n * Start/resume observer\n */\nfunction continueObserving(node, root) {\n    node.observer.instance.observe(root, observerParams);\n}\n/**\n * Start mutation observer\n */\nfunction startObserver(node) {\n    let observer = node.observer;\n    if (observer && observer.instance) {\n        // Already started\n        return;\n    }\n    const root = typeof node.node === 'function' ? node.node() : node.node;\n    if (!root) {\n        // document.body is not available yet\n        return;\n    }\n    if (!observer) {\n        observer = {\n            paused: 0,\n        };\n        node.observer = observer;\n    }\n    // Create new instance, observe\n    observer.instance = new MutationObserver(checkMutations.bind(null, node));\n    continueObserving(node, root);\n    // Scan immediately\n    if (!observer.paused) {\n        queueScan(node);\n    }\n}\n/**\n * Start all observers\n */\nfunction startObservers() {\n    listRootNodes().forEach(startObserver);\n}\n/**\n * Stop observer\n */\nfunction stopObserver(node) {\n    if (!node.observer) {\n        return;\n    }\n    const observer = node.observer;\n    // Stop scan\n    if (observer.pendingScan) {\n        clearTimeout(observer.pendingScan);\n        delete observer.pendingScan;\n    }\n    // Disconnect observer\n    if (observer.instance) {\n        observer.instance.disconnect();\n        delete observer.instance;\n    }\n}\n/**\n * Start observer when DOM is ready\n */\nfunction initObserver(cb) {\n    const isRestart = callback !== null;\n    if (callback !== cb) {\n        // Change callback and stop all pending observers\n        callback = cb;\n        if (isRestart) {\n            listRootNodes().forEach(stopObserver);\n        }\n    }\n    if (isRestart) {\n        // Restart instances\n        startObservers();\n        return;\n    }\n    // Start observers when document is ready\n    onReady(startObservers);\n}\n/**\n * Pause observing node\n */\nfunction pauseObservingNode(node) {\n    (node ? [node] : listRootNodes()).forEach((node) => {\n        if (!node.observer) {\n            node.observer = {\n                paused: 1,\n            };\n            return;\n        }\n        const observer = node.observer;\n        observer.paused++;\n        if (observer.paused > 1 || !observer.instance) {\n            return;\n        }\n        // Disconnect observer\n        const instance = observer.instance;\n        // checkMutations(node, instance.takeRecords());\n        instance.disconnect();\n    });\n}\n/**\n * Pause observer\n */\nfunction pauseObserver(root) {\n    if (root) {\n        const node = findRootNode(root);\n        if (node) {\n            pauseObservingNode(node);\n        }\n    }\n    else {\n        pauseObservingNode();\n    }\n}\n/**\n * Resume observer\n */\nfunction resumeObservingNode(observer) {\n    (observer ? [observer] : listRootNodes()).forEach((node) => {\n        if (!node.observer) {\n            // Start observer\n            startObserver(node);\n            return;\n        }\n        const observer = node.observer;\n        if (observer.paused) {\n            observer.paused--;\n            if (!observer.paused) {\n                // Start / resume\n                const root = typeof node.node === 'function' ? node.node() : node.node;\n                if (!root) {\n                    return;\n                }\n                else if (observer.instance) {\n                    continueObserving(node, root);\n                }\n                else {\n                    startObserver(node);\n                }\n            }\n        }\n    });\n}\n/**\n * Resume observer\n */\nfunction resumeObserver(root) {\n    if (root) {\n        const node = findRootNode(root);\n        if (node) {\n            resumeObservingNode(node);\n        }\n    }\n    else {\n        resumeObservingNode();\n    }\n}\n/**\n * Observe node\n */\nfunction observe(root, autoRemove = false) {\n    const node = addRootNode(root, autoRemove);\n    startObserver(node);\n    return node;\n}\n/**\n * Remove observed node\n */\nfunction stopObserving(root) {\n    const node = findRootNode(root);\n    if (node) {\n        stopObserver(node);\n        removeRootNode(root);\n    }\n}\n\n/**\n * List of modules\n */\nconst finders = [];\n/**\n * Add module\n */\nfunction addFinder(finder) {\n    if (finders.indexOf(finder) === -1) {\n        finders.push(finder);\n    }\n}\n/**\n * Clean icon name: convert from string if needed and validate\n */\nfunction cleanIconName(name) {\n    if (typeof name === 'string') {\n        name = stringToIcon(name);\n    }\n    return name === null || !validateIcon(name) ? null : name;\n}\n/**\n * Compare customisations. Returns true if identical\n */\nfunction compareCustomisations(list1, list2) {\n    const keys1 = Object.keys(list1);\n    const keys2 = Object.keys(list2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let i = 0; i < keys1.length; i++) {\n        const key = keys1[i];\n        if (list2[key] !== list1[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Find all placeholders\n */\nfunction findPlaceholders(root) {\n    const results = [];\n    finders.forEach((finder) => {\n        const elements = finder.find(root);\n        Array.prototype.forEach.call(elements, (item) => {\n            const element = item;\n            if (element[elementFinderProperty] !== void 0 &&\n                element[elementFinderProperty] !== finder) {\n                // Element is assigned to a different finder\n                return;\n            }\n            // Get icon name\n            const name = cleanIconName(finder.name(element));\n            if (name === null) {\n                // Invalid name - do not assign this finder to element\n                return;\n            }\n            // Assign finder to element and add it to results\n            element[elementFinderProperty] = finder;\n            const placeholder = {\n                element,\n                finder,\n                name,\n            };\n            results.push(placeholder);\n        });\n    });\n    // Find all modified SVG\n    const elements = root.querySelectorAll('svg.iconify');\n    Array.prototype.forEach.call(elements, (item) => {\n        const element = item;\n        const finder = element[elementFinderProperty];\n        const data = element[elementDataProperty];\n        if (!finder || !data) {\n            return;\n        }\n        // Get icon name\n        const name = cleanIconName(finder.name(element));\n        if (name === null) {\n            // Invalid name\n            return;\n        }\n        let updated = false;\n        let customisations;\n        if (name.prefix !== data.name.prefix || name.name !== data.name.name) {\n            updated = true;\n        }\n        else {\n            customisations = finder.customisations(element);\n            if (!compareCustomisations(data.customisations, customisations)) {\n                updated = true;\n            }\n        }\n        // Add item to results\n        if (updated) {\n            const placeholder = {\n                element,\n                finder,\n                name,\n                customisations,\n            };\n            results.push(placeholder);\n        }\n    });\n    return results;\n}\n\n/**\n * Flag to avoid scanning DOM too often\n */\nlet scanQueued = false;\n/**\n * Icons have been loaded\n */\nfunction checkPendingIcons() {\n    if (!scanQueued) {\n        scanQueued = true;\n        setTimeout(() => {\n            if (scanQueued) {\n                scanQueued = false;\n                scanDOM();\n            }\n        });\n    }\n}\n/**\n * Compare Icon objects. Returns true if icons are identical.\n *\n * Note: null means icon is invalid, so null to null comparison = false.\n */\nconst compareIcons = (icon1, icon2) => {\n    return (icon1 !== null &&\n        icon2 !== null &&\n        icon1.name === icon2.name &&\n        icon1.prefix === icon2.prefix);\n};\n/**\n * Scan node for placeholders\n */\nfunction scanElement(root) {\n    // Add temporary node\n    const node = findRootNode(root);\n    if (!node) {\n        scanDOM({\n            node: root,\n            temporary: true,\n        }, true);\n    }\n    else {\n        scanDOM(node);\n    }\n}\n/**\n * Scan DOM for placeholders\n */\nfunction scanDOM(node, addTempNode = false) {\n    scanQueued = false;\n    // List of icons to load: [provider][prefix][name] = boolean\n    const iconsToLoad = Object.create(null);\n    // Get placeholders\n    (node ? [node] : listRootNodes()).forEach((node) => {\n        const root = typeof node.node === 'function' ? node.node() : node.node;\n        if (!root || !root.querySelectorAll) {\n            return;\n        }\n        // Track placeholders\n        let hasPlaceholders = false;\n        // Observer\n        let paused = false;\n        // Find placeholders\n        findPlaceholders(root).forEach((item) => {\n            const element = item.element;\n            const iconName = item.name;\n            const provider = iconName.provider;\n            const prefix = iconName.prefix;\n            const name = iconName.name;\n            let data = element[elementDataProperty];\n            // Icon has not been updated since last scan\n            if (data !== void 0 && compareIcons(data.name, iconName)) {\n                // Icon name was not changed and data is set - quickly return if icon is missing or still loading\n                switch (data.status) {\n                    case 'missing':\n                        return;\n                    case 'loading':\n                        if (isPending({\n                            provider,\n                            prefix,\n                            name,\n                        })) {\n                            // Pending\n                            hasPlaceholders = true;\n                            return;\n                        }\n                }\n            }\n            // Check icon\n            const storage = getStorage(provider, prefix);\n            if (storage.icons[name] !== void 0) {\n                // Icon exists - pause observer before replacing placeholder\n                if (!paused && node.observer) {\n                    pauseObservingNode(node);\n                    paused = true;\n                }\n                // Get customisations\n                const customisations = item.customisations !== void 0\n                    ? item.customisations\n                    : item.finder.customisations(element);\n                // Render icon\n                renderIconInPlaceholder(item, customisations, getIconFromStorage(storage, name));\n                return;\n            }\n            if (storage.missing[name]) {\n                // Mark as missing\n                data = {\n                    name: iconName,\n                    status: 'missing',\n                    customisations: {},\n                };\n                element[elementDataProperty] = data;\n                return;\n            }\n            if (!isPending({ provider, prefix, name })) {\n                // Add icon to loading queue\n                if (iconsToLoad[provider] === void 0) {\n                    iconsToLoad[provider] = Object.create(null);\n                }\n                const providerIconsToLoad = iconsToLoad[provider];\n                if (providerIconsToLoad[prefix] === void 0) {\n                    providerIconsToLoad[prefix] = Object.create(null);\n                }\n                providerIconsToLoad[prefix][name] = true;\n            }\n            // Mark as loading\n            data = {\n                name: iconName,\n                status: 'loading',\n                customisations: {},\n            };\n            element[elementDataProperty] = data;\n            hasPlaceholders = true;\n        });\n        // Node stuff\n        if (node.temporary && !hasPlaceholders) {\n            // Remove temporary node\n            stopObserving(root);\n        }\n        else if (addTempNode && hasPlaceholders) {\n            // Add new temporary node\n            observe(root, true);\n        }\n        else if (paused && node.observer) {\n            // Resume observer\n            resumeObservingNode(node);\n        }\n    });\n    // Load icons\n    Object.keys(iconsToLoad).forEach((provider) => {\n        const providerIconsToLoad = iconsToLoad[provider];\n        Object.keys(providerIconsToLoad).forEach((prefix) => {\n            loadIcons(Object.keys(providerIconsToLoad[prefix]).map((name) => {\n                const icon = {\n                    provider,\n                    prefix,\n                    name,\n                };\n                return icon;\n            }), checkPendingIcons);\n        });\n    });\n}\n\n// src/customisations/rotate.ts\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n// src/customisations/shorthand.ts\nvar separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\n/**\n * Check if attribute exists\n */\nfunction hasAttribute(element, key) {\n    return element.hasAttribute(key);\n}\n/**\n * Get attribute value\n */\nfunction getAttribute(element, key) {\n    return element.getAttribute(key);\n}\n/**\n * Get attribute value\n */\nfunction getBooleanAttribute(element, key) {\n    const value = element.getAttribute(key);\n    if (value === key || value === 'true') {\n        return true;\n    }\n    if (value === '' || value === 'false') {\n        return false;\n    }\n    return null;\n}\n/**\n * Boolean attributes\n */\nconst booleanAttributes = [\n    'inline',\n    'hFlip',\n    'vFlip',\n];\n/**\n * String attributes\n */\nconst stringAttributes = [\n    'width',\n    'height',\n];\n/**\n * Class names\n */\nconst mainClass = 'iconify';\nconst inlineClass = 'iconify-inline';\n/**\n * Selector combining class names and tags\n */\nconst selector = 'i.' +\n    mainClass +\n    ', span.' +\n    mainClass +\n    ', i.' +\n    inlineClass +\n    ', span.' +\n    inlineClass;\n/**\n * Export finder for:\n *  <span class=\"iconify\" />\n *  <i class=\"iconify\" />\n *  <span class=\"iconify-inline\" />\n *  <i class=\"iconify-inline\" />\n */\nconst finder = {\n    /**\n     * Find all elements\n     */\n    find: (root) => root.querySelectorAll(selector),\n    /**\n     * Get icon name from element\n     */\n    name: (element) => {\n        if (hasAttribute(element, 'data-icon')) {\n            return getAttribute(element, 'data-icon');\n        }\n        return null;\n    },\n    /**\n     * Get customisations list from element\n     */\n    customisations: (element, defaultValues = {\n        inline: false,\n    }) => {\n        const result = defaultValues;\n        // Check class list for inline class\n        const className = element.getAttribute('class');\n        const classList = className ? className.split(/\\s+/) : [];\n        if (classList.indexOf(inlineClass) !== -1) {\n            result.inline = true;\n        }\n        // Rotation\n        if (hasAttribute(element, 'data-rotate')) {\n            const value = rotateFromString(getAttribute(element, 'data-rotate'));\n            if (value) {\n                result.rotate = value;\n            }\n        }\n        // Shorthand attributes\n        if (hasAttribute(element, 'data-flip')) {\n            flipFromString(result, getAttribute(element, 'data-flip'));\n        }\n        if (hasAttribute(element, 'data-align')) {\n            alignmentFromString(result, getAttribute(element, 'data-align'));\n        }\n        // Boolean attributes\n        booleanAttributes.forEach((attr) => {\n            if (hasAttribute(element, 'data-' + attr)) {\n                const value = getBooleanAttribute(element, 'data-' + attr);\n                if (typeof value === 'boolean') {\n                    result[attr] = value;\n                }\n            }\n        });\n        // String attributes\n        stringAttributes.forEach((attr) => {\n            if (hasAttribute(element, 'data-' + attr)) {\n                const value = getAttribute(element, 'data-' + attr);\n                if (value !== '') {\n                    result[attr] = value;\n                }\n            }\n        });\n        return result;\n    },\n    /**\n     * Filter classes\n     */\n    classFilter: (classList) => {\n        const result = [];\n        classList.forEach((className) => {\n            if (className !== 'iconify' &&\n                className !== '' &&\n                className.slice(0, 9) !== 'iconify--') {\n                result.push(className);\n            }\n        });\n        return result;\n    },\n};\n\n// import { finder as iconifyIconFinder } from './finders/iconify-icon';\n/**\n * Generate icon\n */\nfunction generateIcon(name, customisations, returnString) {\n    // Get icon data\n    const iconData = getIconData(name);\n    if (!iconData) {\n        return null;\n    }\n    // Split name\n    const iconName = stringToIcon(name);\n    // Clean up customisations\n    const changes = mergeCustomisations(defaults, typeof customisations === 'object' ? customisations : {});\n    // Get data\n    return renderIconInPlaceholder({\n        name: iconName,\n    }, changes, iconData, returnString);\n}\n/**\n * Get version\n */\nfunction getVersion() {\n    return '2.1.2';\n}\n/**\n * Generate SVG element\n */\nfunction renderSVG(name, customisations) {\n    return generateIcon(name, customisations, false);\n}\n/**\n * Generate SVG as string\n */\nfunction renderHTML(name, customisations) {\n    return generateIcon(name, customisations, true);\n}\n/**\n * Get rendered icon as object that can be used to create SVG (use replaceIDs on body)\n */\nfunction renderIcon(name, customisations) {\n    // Get icon data\n    const iconData = getIconData(name);\n    if (!iconData) {\n        return null;\n    }\n    // Clean up customisations\n    const changes = mergeCustomisations(defaults, typeof customisations === 'object' ? customisations : {});\n    // Get data\n    return iconToSVG(iconData, changes);\n}\n/**\n * Scan DOM\n */\nfunction scan(root) {\n    if (root) {\n        scanElement(root);\n    }\n    else {\n        scanDOM();\n    }\n}\n/**\n * Initialise stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Add document.body node\n    addBodyNode();\n    // Add finder modules\n    // addFinder(iconifyIconFinder);\n    addFinder(finder);\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Load observer and scan DOM on next tick\n    setTimeout(() => {\n        initObserver(scanDOM);\n        scanDOM();\n    });\n}\n\n/**\n * Enable cache\n */\nfunction enableCache(storage, enable) {\n    toggleBrowserCache(storage, enable !== false);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Initialise stuff\n */\n// Set API module\nsetAPIModule('', getFetch() ? fetchAPIModule : jsonpAPIModule);\n/**\n * Function to enable node-fetch for getting icons on server side\n */\nfunction setFetch(nodeFetch) {\n    setFetch$1(nodeFetch);\n    setAPIModule('', fetchAPIModule);\n}\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (const key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    listAPIProviders,\n    mergeParams,\n};\n/**\n * Global variable\n */\nconst Iconify = {\n    // IconifyAPIInternalFunctions\n    _api,\n    // IconifyAPIFunctions\n    addAPIProvider,\n    loadIcons,\n    loadIcon,\n    // IconifyStorageFunctions\n    iconExists,\n    getIcon,\n    listIcons,\n    addIcon,\n    addCollection,\n    shareStorage,\n    // IconifyBuilderFunctions\n    replaceIDs,\n    calculateSize,\n    buildIcon,\n    // IconifyCommonFunctions\n    getVersion,\n    renderSVG,\n    renderHTML,\n    renderIcon,\n    scan,\n    observe,\n    stopObserving,\n    pauseObserver,\n    resumeObserver,\n    // IconifyBrowserCacheFunctions\n    enableCache,\n    disableCache,\n};\n\nexport { _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, Iconify as default, disableCache, enableCache, getIcon, getVersion, iconExists, listIcons, loadIcon, loadIcons, observe, pauseObserver, renderHTML, renderIcon, renderSVG, replaceIDs, resumeObserver, scan, shareStorage, stopObserving };\n\n// Export to window or web worker\ntry {\n\tif (self.Iconify === void 0) {\n\t\tself.Iconify = Iconify;\n\t}\n} catch (err) {\n}\n", "import d from \"./node_modules/@iconify/iconify/dist/iconify.mjs\";export default d;\nexport * from \"./node_modules/@iconify/iconify/dist/iconify.mjs\""],
  "mappings": "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",
  "names": ["getIcon", "callback", "storage", "config", "global", "simpleNames", "send", "loaded", "finder", "name", "node", "observer", "elements", "iconsToLoad", "_window"]
}
