/**
 * List of root nodes
 */
let nodes = [];
/**
 * Find node
 */
export function findRootNode(node) {
    for (let i = 0; i < nodes.length; i++) {
        const item = nodes[i];
        let root = typeof item.node === 'function' ? item.node() : item.node;
        if (root === node) {
            return item;
        }
    }
}
/**
 * Add extra root node
 */
export function addRootNode(root, autoRemove = false) {
    let node = findRootNode(root);
    if (node) {
        // Node already exist: switch type if needed
        if (node.temporary) {
            node.temporary = autoRemove;
        }
        return node;
    }
    // Create item, add it to list, start observer
    node = {
        node: root,
        temporary: autoRemove,
    };
    nodes.push(node);
    return node;
}
/**
 * Add document.body node
 */
export function addBodyNode() {
    if (document.body) {
        return addRootNode(document.body);
    }
    nodes.push({
        node: () => {
            return document.body;
        },
    });
}
/**
 * Remove root node
 */
export function removeRootNode(root) {
    nodes = nodes.filter((node) => {
        const element = typeof node.node === 'function' ? node.node() : node.node;
        return root !== element;
    });
}
/**
 * Get list of root nodes
 */
export function listRootNodes() {
    return nodes;
}
