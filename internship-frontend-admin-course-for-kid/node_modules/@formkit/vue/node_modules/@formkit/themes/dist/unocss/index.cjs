'use strict';

const actionsVariants = (matcher) => {
    const match = matcher.match(/^formkit-action[:-]/);
    if (!match)
        return matcher;
    return {
        matcher: matcher.slice(match[0].length),
        selector: s => `.formkit-actions ${s}, .formkit-actions${s}`
    };
};
const attributesVariants = (matcher) => {
    const match = matcher.match(/^formkit-([_\d\w]+)[:-]/);
    if (!match)
        return matcher;
    return {
        matcher: matcher.slice(match[0].length),
        selector: s => `${s}[data-${match[1]}], [data-${match[1]}] ${s}, [data-${match[1]}]${s}`
    };
};
const messageStatesVariants = (matcher) => {
    const match = matcher.match(/^formkit-message-([_\d\w]+)[:-]/);
    if (!match)
        return matcher;
    return {
        matcher: matcher.slice(match[0].length),
        selector: s => `[data-message-type="${match[1]}"] ${s}, [data-message-type="${match[1]}"]${s}`
    };
};
/**
 * The FormKit plugin for UnoCSS
 * @public
 */
const FormKitVariants = () => {
    return {
        name: 'unocss-preset-formkit',
        variants: [
            actionsVariants,
            attributesVariants,
            messageStatesVariants
        ]
    };
};

module.exports = FormKitVariants;
